./config/config.json

    "online_path" : "/home/quanle.li/project/online_env/tpssdk",
    "update_path" : "/home/quanle.li/project/online_env/tpssdk",
    
    ÐÞ¸ÄÄ¿Â¼Ô´
    
    netstat -tulnp ²é¿´¶Ë¿ÚºÅÐÅÏ¢
    
    
²é¿´µØÍ¼ÓÃµÄ£ºhttp://100.81.11.237/path_compare/index.html

´ó¸çÐ´µÄµØÍ¼¹¤¾ß£ºhttp://100.81.11.237/pathtool/path/wayPath/comp.html#
²é¿´ÀúÊ·½»Í¨ÐÅÏ¢µÄ¹¤¾ß£ºhttp://10.189.194.172:8090/mapv3_amap_history.html?_menucode=8abde0974ef1793e014ef1793ea50000

rm -rf É¾³ýÄ¿Â¼

´úÂëµØÖ·£ºhttp://svn.autonavi.alibaba-inc.com/repos/online_navi/branches/AMap6.0_Tune_Turn_Cost

tar czvf FileName.tar DirName

tar zxvf /bbs.tar.zip -C /zzz/bbs 
scp
¸´ÖÆÄ¿Â¼£º 
        * ÃüÁî¸ñÊ½£º 
                scp -r local_folder remote_username@remote_ip:remote_folder 

scp AMap6.0_Tune_Turn_Cost.tar rxm108934@10.101.76.101:AMap6.0

²é¿´Ä¿Â¼ÎÄ¼þ´óÐ¡£º du -sh *

ctrl+k=É¾³ý´Ë´¦ÖÁÄ©Î²ËùÓÐÄÚÈÝ
ctrl+u= É¾³ý´Ë´¦ÖÁ¿ªÊ¼ËùÓÐÄÚÈÝ

curl -d '<loadetahistory Type=0><citycode>110000</citycode><time>20160324120000</time></loadetahistory>' 100.81.2.59:40001/loadhistorytraffic

alt+shift+d ¸´ÖÆµ±Ç°ÐÐ


ÔÚ±à¼­Ä£Ê½ÏÂÊäÈë
ngg »òÕß nG
nÎªÖ¸¶¨µÄÐÐÊý(Èç25)
25gg»òÕß25G Ìø×ªµ½µÚ25ÐÐ.
ÔÚÃüÁîÄ£Ê½ÏÂÊäÈëÐÐºÅn
: n
Èç¹ûÏë´ò¿ªÎÄ¼þ¼´Ìø×ª
vim +n FileName
²é¿´µ±Ç°¹â±êËùÔÚµÄÐÐ
Ctrl+g

svn update -r10030





²é¿´ºóÌ¨½ø³Ì£ºps aux|grep run_v2.sh 	

ÉèÖÃºóÌ¨½ø³Ì£ºnohup ./run_v2.sh
nohup command > myout.file 2>&1 &
Ê¹ÓÃ jobs ²é¿´ÈÎÎñ¡£
Ê¹ÓÃ fg %n¡¡¹Ø±Õ¡£

grep -r "startup" * 


·´Ïò´úÀí£¨Reverse Proxy£©·½Ê½ÊÇÖ¸ÒÔ´úÀí·þÎñÆ÷À´½ÓÊÜinternetÉÏµÄÁ¬½ÓÇëÇó£¬È»ºó½«ÇëÇó×ª·¢¸øÄÚ²¿ÍøÂçÉÏµÄ·þÎñÆ÷£¬²¢½«´Ó·þÎñÆ÷ÉÏµÃµ½µÄ½á¹û·µ»Ø¸øinternetÉÏÇëÇóÁ¬½ÓµÄ¿Í»§¶Ë£¬´ËÊ±´úÀí·þÎñÆ÷¶ÔÍâ¾Í±íÏÖÎªÒ»¸ö·þÎñÆ÷¡£  
ÕâÀï½²µÃºÜÖ±°×¡£·´Ïò´úÀí·½Ê½Êµ¼ÊÉÏ¾ÍÊÇÒ»Ì¨¸ºÔð×ª·¢µÄ´úÀí·þÎñÆ÷£¬Ã²ËÆ³äµ±ÁËÕæÕý·þÎñÆ÷µÄ¹¦ÄÜ£¬µ«Êµ¼ÊÉÏ²¢²»ÊÇ£¬´úÀí·þÎñÆ÷Ö»ÊÇ³äµ±ÁË×ª·¢µÄ×÷ÓÃ£¬²¢ÇÒ´ÓÕæÕýµÄ·þÎñÆ÷ÄÇÀïÈ¡µÃ·µ»ØµÄÊý¾Ý¡£ÕâÑùËµ£¬ÆäÊµnginxÍê³ÉµÄ¾ÍÊÇÕâÑùµÄ¹¤×÷¡£ÎÒÃÇÈÃnginx¼àÌýÒ»¸ö¶Ë¿Ú£¬Æ©Èç80¶Ë¿Ú£¬µ«Êµ¼ÊÉÏÎÒÃÇ×ª·¢¸øÔÚ8080¶Ë¿ÚµÄtomcat£¬ÓÉËüÀ´´¦ÀíÕæÕýµÄÇëÇó£¬µ±ÇëÇóÍê³Éºó£¬tomcat·µ»Ø£¬µ«Êý¾Ý´ËÊ±Ã»Ö±½Ó·µ»Ø£¬¶øÊÇÖ±½Ó¸ønginx£¬ÓÉnginx½øÐÐ·µ»Ø£¬ÕâÀï£¬ÎÒÃÇ»áÒÔÎªÊÇnginx½øÐÐÁË´¦Àí£¬µ«Êµ¼ÊÉÏ½øÐÐ´¦ÀíµÄÊÇtomcat¡£

/etc/nginx/nginx.conf

ÃÜÂë£ºÊäÈëÎÒ×Ô¼ºµÄ

ps -ef|grep nginx

ftp://mirrors.kernel.org/gnu/gcc/gcc-4.4.6/
https://ftp.gnu.org/gnu/gmp/
±àÒëGMP×¢ÒâÊÂÏî£º
±àÒëÑ¡ÏîÐèÒªÊ¹ÓÃ£º£¨http://www.educity.cn/wenda/349477.html£©
./configure --prefix=/usr/local/gcc/gmp-4.3.2 --build=x86_64-linux

export SupportBlitz=1

±àÒëprotoµÄÃüÁî£ºprotoc -I=. --cpp_out=. route.proto
debug¹¤¾ßµÄagentserverÓÃµÄÊÇ100.81.2.59£¬±àÒëagentserverÒÀ¾ÉÔÚ10.101.84.166·þÎñÆ÷¡£

crontab -e:
00 18 * * * cd /home/rxm108934/workspace/10w_free_stream_peak_daily_autorun/ && ./10w_auto_run_daily_for_query.sh  ; cd /home/rxm108934/workspace/auto_run_query.bak/ && ./run_v2.sh

 	

 ÉèÖÃcoreÎÄ¼þµÄ´óÐ¡ÎÞÉÏÏÞ£ºulimit -c unlimited

 drop table if exists autonavi_navi_dev.t_turn_cost_test_cases_xiaoming_content;

 odpscmd ½øÈëodps½çÃæ
use autonavi_navi; Ê¹ÓÃ¸Ã¹¤³Ì
desc autonavi_navi_dev.t_turn_cost_test_cases; ²é¿´¸Ã±í¸ñµÄÐÅÏ¢
select * from autonavi_navi_dev.t_turn_cost_test_cases limit 10; ²é¿´Ç°Èô¸ÉÐÐµÄÄÚÈÝ

tunnel download autonavi_navi_dev.t_turn_cost_test_cases log.txt;  ÏÂÔØÊý¾Ýµ½log.txtÏÂ
tunnel download autonavi_navi_dev.t_turn_cost_test_cases_xiaoming_raw_all_attr log.txt -fd "\t";
tunnel download autonavi_navi_dev.route_daily_add_eta_finish95percent_delete_repeat_table_spec_1000w  20161027_sample1000w_query_for_gen_feature.txt -fd "\t";


odpscmd -e 'tunnel download  autonavi_navi_dev.tmp_lukuang_table -fd "\t" ./lukuang.txt'

top -p Ïß³ÌºÅ


>>> names = locals()
>>> for i in xrange(1, 101):
...   names['x%s' % i] = i
...
>>> x1
1
>>> x2
2
>>> x100
100


linux ×Ô´øµÄsortÃüÁî£º
sort -n -u -k 2 -t $'\t' 20160825_110000.txt >20160825_110000_sorted.txt
  -b   ºöÂÔÃ¿ÐÐÇ°Ãæ¿ªÊ¼³öµÄ¿Õ¸ñ×Ö·û¡£
  -c   ¼ì²éÎÄ¼þÊÇ·ñÒÑ¾­°´ÕÕË³ÐòÅÅÐò¡£
  -f   ÅÅÐòÊ±£¬ºöÂÔ´óÐ¡Ð´×ÖÄ¸¡£
  -M   ½«Ç°Ãæ3¸ö×ÖÄ¸ÒÀÕÕÔÂ·ÝµÄËõÐ´½øÐÐÅÅÐò¡£
  -n   ÒÀÕÕÊýÖµµÄ´óÐ¡ÅÅÐò¡£
  -o<Êä³öÎÄ¼þ>   ½«ÅÅÐòºóµÄ½á¹û´æÈëÖ¸¶¨µÄÎÄ¼þ¡£
  -r   ÒÔÏà·´µÄË³ÐòÀ´ÅÅÐò¡£
  -t<·Ö¸ô×Ö·û>   Ö¸¶¨ÅÅÐòÊ±ËùÓÃµÄÀ¸Î»·Ö¸ô×Ö·û¡£
  -k  Ñ¡ÔñÒÔÄÄ¸öÇø¼ä½øÐÐÅÅÐò¡£
  -uÑ¡Ïî ÔÚÊä³öÐÐÖÐÈ¥³ýÖØ¸´ÐÐ¡£

linux ²é¿´ÎÄ¼þ¸öÊý£º
  ll *_beijing_timeblock_userid.txt | grep "^-"|wc -l



  >>> ';'.join(list)  
'first;second;third'  
>>> ';'.join(list).split(';')  
['first', 'second', 'third']  

1352168
90123,79724,72168,72923,72167,71757,70533,74923,70531,70536,70527,71767,70939
FAILED: ODPS-0010000:System internal error - String append failed, string length (9219723) is large than maximum (8388608) in column (0)

2016-09-13 11:36:58 M1_job0:0/1594/1594[100%]	M2_job0:0/23/23[100%]	J3_1_2_job0:1111/0/1111[63%]	J4_3_2_job0:0/0/1111[0%]
2016-09-13 11:37:03 M1_job0:0/1594/1594[100%]	M2_job0:0/23/23[100%]	J3_1_2_job0:1111/0/1111[63%]	J4_3_2_job0:0/0/1111[0%]
2016-09-13 11:37:08 M1_job0:0/1594/1594[100%]	M2_job0:0/23/23[100%]	J3_1_2_job0:1111/0/1111[64%]	J4_3_2_job0:0/0/1111[0%]
2016-09-13 11:37:14 M1_job0:0/1594/1594[100%]	M2_job0:0/23/23[100%]	J3_1_2_job0:1111/0/1111[64%]	J4_3_2_job0:0/0/1111[0%]
日志查询请求失败，拉取日志结束

2016-09-19 06:24:14 M1_job0:0/478/478[100%]	R2_1_job0:0/0/1[0%]
2016-09-19 06:24:19 M1_job0:0/478/478[100%]	R2_1_job0:0/0/1[0%]
000002:查询调试job失败，jobId:2868e515-69fc-4bf8-8303-94a3be81f085


+------------------------------------------------------------------------------------+
| Owner: ALIYUN$dxp_47482098@aliyun.com | Project: autonavi_tinfo                              |
| TableComment: 轨迹生成日表                                                               |
+------------------------------------------------------------------------------------+
| CreateTime:               2014-11-19 16:27:25                                      |
| LastDDLTime:              2014-11-19 17:28:30                                      |
| LastModifiedTime:         2016-09-13 11:20:49                                      |
| Lifecycle:                90                                                       |
+------------------------------------------------------------------------------------+
| InternalTable: YES      | Size: 10248819622008                                     |
+------------------------------------------------------------------------------------+
| Native Columns:                                                                    |
+------------------------------------------------------------------------------------+
| Field           | Type       | Label | Comment                                     |
+------------------------------------------------------------------------------------+
| dscode          | bigint     |       | 数据源标示                                       |
| id              | string     |       | ASCII编码字符串                                  |
| stime           | string     |       | 采用yyyyMMddHHmmss格式                          |
| etime           | string     |       | 采用yyyyMMddHHmmss格式                          |
| elapse          | bigint     |       | 轨迹结束时间与轨迹开始时间相差，单位：秒                        |
| length          | bigint     |       | 相邻两GPS点直线距离之和，单位：米                          |
| count           | bigint     |       | 轨迹拥有的GPS点个数                                 |
| points          | string     |       | GPS点使用“:”分割，GPS点信息采用“,”分割                   |
+------------------------------------------------------------------------------------+
| Partition Columns:                                                                 |
+------------------------------------------------------------------------------------+
| dt              | string     | 轨迹日期                                                |
| adcode          | string     | 城市编码，城市编码为6位，后四位为零时表示省                              |
+------------------------------------------------------------------------------------+



>>> a = [1,2,2,3,5,8,10,10,20]
>>> b = [3,3,3,3,10,11,1,1,1]
>>> set(a)
set([1, 2, 3, 5, 8, 10, 20])
>>> c = set(a) & set(b)
>>> c
set([1, 10, 3])
>>> set(b)
set([11, 1, 10, 3])
>>> d = list(c)
>>> d
[1, 10, 3]
>>> d.sort(key = a.index)
>>> d
[1, 3, 10]
>>>
>>> d.sort(key = b.index)
>>> d
[3, 10, 1]



| Field           | Type       | Label | Comment                                     |
+------------------------------------------------------------------------------------+
| link_id         | bigint     |       | 64 位Linkid，由(mesh, roadid, dir) 编码而成        |
| enter_time      | bigint     |       | 进入Link 的时间，自1970-01-01 00:00:00 UTC 以来的秒数   |
| exit_turn       | bigint     |       | 离开此Link的角度，向左为正向右为负，取值范围在[-180,180] ，当next_link_id 为非0 时有意义 |
| travel_time     | double     |       | 在此Link 上的旅行时间，精确到小数点后2位                     |
| stop_time       | double     |       | 在Link 末端等红灯的时间                              |
| link_length     | double     |       | Link长度，单位米                                  |
| road_class      | bigint     |       | 道路等级                                        |
| cover_percent   | double     |       | 严格匹配上的覆盖率，取值范围[0, 1.0]，注意由于计算精度问题，有可能出现完全覆盖但是覆盖率却小于1 的情况 |
| no_stop_speed   | double     |       | 道路不考虑交通灯情况下的平均速度，即减去stop_time 计算出的平均速度      |
| avg_speed       | double     |       | 道路通行的平均速度，即link_length/travel_time单位kmph    |
| ref_speed       | bigint     |       | link 参考速度，来源于roadmap 静态数据，单位kmph            |
| next_link_id    | bigint     |       | 由此link 驶入的下一个Link 的id                       |
| dscode          | bigint     |       | 数据源ID，具体可参考数据源信息列表                          |
| id              | string     |       | 车辆ID                                        |
| start_time      | string     |       | 轨迹的起始时间                                     |
| light_scope     | double     |       | 信号灯影响的长度，最大为80m                             |
| light_time      | double     |       | 信号灯影响下的旅行时间，即行驶light_scope 所用的时间            |
| light_queue     | double     |       | 第一次停车点距离信号灯的距离                              |
| driving_status  | string     |       | 舒适度字段，取值范围[0, 25..5]                        |
| match_points_info | string     |       | link抓路点信息，格式为pnt_index|ts|x|y|speed|dir-px|py|pdis|end_off|start_off_ratio|match_status;...,其中-前面为原始GPS 点信息（字段属性依次为点在轨迹中的index, 时间戳，经度，维度，速度，角度），-后面为投影点信息（字段属性依次为投影点经度、纬度，投影距离，投影点距link末端点的距离，link起点距投影点的长度占link总长度之比，匹配状态（0：匹配成功，1：位置相同点，2：探路失败点，3：抓路失败点，4. 异常点， 5：停车点，6：点附件有内部路）） |
+------------------------------------------------------------------------------------+
| Partition Columns:                                                                 |
+------------------------------------------------------------------------------------+
| dt              | string     | road_profile 日期                                     |
| adcode          | string     | 城市编码                                                |
+------------------------------------------------------------------------------------+




link_enter_time = time.strftime('%H%M%S',time.localtime(float(split_all_link_of_user_list[index]))) #time_stamp -->time



将时间a转为时间戳 
time.mktime(time.strptime(a,'%Y-%m-%d %H:%M:%S'))

select * from autonavi_navi_dev.route_daily_add_eta_finish95percent_delete_repeat_with_real_trace_filter_repeat_track_table
where user_id rlike "^0(0)*$" group  by user_id
